#include <bits/stdc++.h>
using namespace std;
struct job{
    int st,fi,pro;
    
};
bool compare(job a,job b){
    return(a.fi<b.fi);
}
int findmax(job a[],int i){
   int lo=0,ri=i-1;
   while(lo<=ri){
       int mid=(lo+ri)/2;
       if(a[mid].fi<=a[i-1].st){
           if(a[mid+1].fi<=a[i-1].st){
               lo=mid+1;
           }
           else{
               return mid;
           }
       }
       ri=mid-1;
   }
    return -1;
}
int findprof(job a[],int n){
    if(n==1){
        return a[n-1].pro;
    }
    int incl=a[n-1].pro;//including current job
    int i=findmax(a,n);
    if(i!=-1)
    incl+=findprof(a,i+1);

    int excl=findprof(a,n-1);//excluding current job
    return max(incl,excl);
}
int main() {
 job arr[] = {{3, 10, 20}, {1, 2, 50}, {6, 19, 100}, {2, 100, 200}}; 
    int n = sizeof(arr)/sizeof(arr[0]); 
sort(arr,arr+n, compare);
cout<<findprof(arr,n);
	return 0;
}
